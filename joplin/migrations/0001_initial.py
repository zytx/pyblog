# Generated by Django 3.0 on 2020-05-23 22:59

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('created_time', models.IntegerField()),
                ('updated_time', models.IntegerField()),
                ('user_created_time', models.IntegerField()),
                ('user_updated_time', models.IntegerField()),
            ],
            options={
                'db_table': 'folders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('is_conflict', models.IntegerField()),
                ('source_url', models.CharField(max_length=255)),
                ('is_todo', models.IntegerField()),
                ('created_time', models.IntegerField()),
                ('updated_time', models.IntegerField()),
                ('user_created_time', models.IntegerField()),
                ('user_updated_time', models.IntegerField()),
            ],
            options={
                'db_table': 'notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NoteResources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_associated', models.IntegerField()),
                ('last_seen_time', models.IntegerField()),
            ],
            options={
                'db_table': 'note_resources',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NoteTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.IntegerField()),
                ('updated_time', models.IntegerField()),
                ('user_created_time', models.IntegerField()),
                ('user_updated_time', models.IntegerField()),
            ],
            options={
                'db_table': 'note_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('mime', models.CharField(max_length=255)),
                ('filename', models.CharField(max_length=255)),
                ('created_time', models.IntegerField()),
                ('updated_time', models.IntegerField()),
                ('user_created_time', models.IntegerField()),
                ('user_updated_time', models.IntegerField()),
                ('file_extension', models.CharField(max_length=255)),
                ('size', models.IntegerField()),
            ],
            options={
                'db_table': 'resources',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('created_time', models.IntegerField()),
                ('updated_time', models.IntegerField()),
                ('user_created_time', models.IntegerField()),
                ('user_updated_time', models.IntegerField()),
            ],
            options={
                'db_table': 'tags',
                'managed': False,
            },
        ),
    ]
